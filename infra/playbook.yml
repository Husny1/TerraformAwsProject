- name: Configure app and database server
  hosts: all_servers
  remote_user: ubuntu
  become: yes # Use sudo
  vars:
  ansible_ssh_common_args: '-o StrictHostKeyChecking=no'


  tasks:
    - name: Install required system packages for Docker
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    # Node/NPM
    - name: Install the GPG key for Node.js LTS
      apt_key:
        url: "https://deb.nodesource.com/gpgkey/nodesource.gpg.key"
        state: present

    - name: Install the Node.js LTS repos
      apt_repository:
        repo: "deb https://deb.nodesource.com/node_20.x jammy main"
        state: present
        update_cache: yes
      
    - name: Install NodeJS
      apt:
        name: nodejs
        state: latest

    - name: Install Docker dependencies
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: latest

    - name: Add Docker GPG key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker apt repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu jammy stable"
        state: present
        update_cache: yes

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true




    - name: Upload database snapshot

      copy:
        src: ../data/snapshot-prod-data.sql
        dest: /tmp/snapshot-prod-data.sql # Will be mounted into db container


    - name: Create & run db container

      community.docker.docker_container:

        name: "foo_db"
        image: "postgres:14.7"
        env:
          POSTGRES_PASSWORD: "devops"
          POSTGRES_USER: "pete"
          POSTGRES_DB: "foo"
        published_ports:
        - "0.0.0.0:5432:5432"
        volumes:
        - "/tmp/snapshot-prod-data.sql:/docker-entrypoint-initdb.d/init.sql"

    - name: Run Application container
      command: >
        docker run --name foo_app --add-host host.docker.internal:host-gateway
        -e PORT=3003
        -e DB_HOSTNAME=host.docker.internal
        -e DB_PORT=80
        -e DB_USERNAME=pete
        -e DB_PASSWORD=devops
        -p 0.0.0.0:80:3003
        -d mattcul/assignment2app:1.0.0
